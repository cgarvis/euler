// The sequence of triangle numbers is generated by adding the natural numbers.
// So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first
// ten terms would be:
//
// 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
//
// Let us list the factors of the first seven triangle numbers:
//
//    1: 1
//    3: 1,3
//    6: 1,2,3,6
//   10: 1,2,5,10
//   15: 1,3,5,15
//   21: 1,3,7,21
//   28: 1,2,4,7,14,28
//
// We can see that 28 is the first triangle number to have over five divisors.
//
// What is the value of the first triangle number to have over five hundred divisors?

package main

import "fmt"

func get_divisors(x int) []int {
	divisors := []int{}

	i := 1
	j := x
	for i <= j {
		if x % i == 0 {
			j = x/i
			divisors = append(divisors, i, j)
		}
		i++
	}

	return divisors
}

func main() {
	i, triangle := 1, 0

	var divisors []int

	for {
		triangle += i
		divisors = get_divisors(triangle)

		if len(divisors) > 500 {
			break
		}
		i++
	}

	fmt.Println(triangle)
}
